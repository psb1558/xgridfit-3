import sys
import re

#      This file is part of xgridfit, version 3.
#      Licensed under the Apache License, Version 2.0.
#      Copyright (c) 2006-20 by Peter S. Baker

inputfile = sys.argv[1]
outputfile = sys.argv[2]

def fixupLong(s):
    s = re.sub(r'<call-macro\b', '<callm', s)
    s = re.sub(r'<\/call-macro\b', '</callm', s)
    s = re.sub(r'<call-function\b', '<callf', s)
    s = re.sub(r'<\/call-function\b', '</callf', s)
    s = re.sub(r'<call-glyph\b', '<callg', s)
    s = re.sub(r'<\/call-glyph\b', '</callg', s)
    s = re.sub(r'<call-param\b', '<callp', s)
    s = re.sub(r'<\/call-param\b', '</callp', s)
    s = re.sub(r'<param-set\b', '<pmset', s)
    s = re.sub(r'<\/param-set\b', '</pmset', s)
    s = re.sub(r'<control-value\b', '<cv', s)
    s = re.sub(r'<\/control-value\b', '</cv', s)
    s = re.sub(r'<function\b', '<fn', s)
    s = re.sub(r'<\/function\b', '</fn', s)
    s = re.sub(r'<macro\b', '<mo', s)
    s = re.sub(r'<\/macro\b', '</mo', s)
    s = re.sub(r'<glyph\b', '<gl', s)
    s = re.sub(r'<\/glyph\b', '</gl', s)
    s = re.sub(r'<point\b', '<pt', s)
    s = re.sub(r'<\/point\b', '</pt', s)
    s = re.sub(r'<param\b', '<pm', s)
    s = re.sub(r'<\/param\b', '</pm', s)
    s = re.sub(r'<variable\b', '<va', s)
    s = re.sub(r'<\/variable\b', '</va', s)
    s = re.sub(r'<with-param\b', '<wpm', s)
    s = re.sub(r'<\/with-param\b', '</wpm', s)
    s = re.sub(r'<set-vectors\b', '<setvs', s)
    s = re.sub(r'<\/set-vectors\b', '</setvs', s)
    s = re.sub(r'<with-control-value\b', '<wcv', s)
    s = re.sub(r'<\/with-control-value\b', '</wcv', s)
    s = re.sub(r'<reference\b', '<ref', s)
    s = re.sub(r'<\/reference\b', '</ref', s)
    s = re.sub(r'<align\b', '<al', s)
    s = re.sub(r'<\/align\b', '</al', s)
    s = re.sub(r'<shift\b', '<sh', s)
    s = re.sub(r'<\/shift\b', '</sh', s)
    s = re.sub(r'<interpolate\b', '<ip', s)
    s = re.sub(r'<\/interpolate\b', '</ip', s)
    s = re.sub(r'<constant\b', '<cn', s)
    s = re.sub(r'<\/constant\b', '</cn', s)
    s = re.sub(r'<with-vectors\b', '<wvs', s)
    s = re.sub(r'<\/with-vectors\b', '</wvs', s)
    s = re.sub(r'<set-control-value\b', '<setcv', s)
    s = re.sub(r'<\/set-control-value\b', '</setcv', s)
    s = re.sub(r'<interpolate-untouched-points\b', '<iup', s)
    s = re.sub(r'<\/interpolate-untouched-points\b', '</iup', s)
    s = re.sub(r'<pre-program\b', '<prep', s)
    s = re.sub(r'<\/pre-program\b', '</prep', s)
    s = re.sub(r'<move\b', '<mv', s)
    s = re.sub(r'<\/move\b', '</mv', s)
    s = re.sub(r'\bnum=', 'n=', s)
    s = re.sub(r'\bname=', 'nm=', s)
    s = re.sub(r'\bvalue=', 'val=', s)
    s = re.sub(r'\bdistance=', 'di=', s)
    s = re.sub(r'\bps-name=', 'pnm=', s)
    return(s)

f = open(inputfile)
content = f.readlines()
f.close()
length = len(content)
for i in range(length):
    content[i] = fixupLong(content[i]):
of = open(outputfile, "w")
of.writelines(content)
of.close()
